// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview A Genkit flow that generates descriptions for a software project.
 *
 * - generateProjectDescription - A function that takes a project title and returns short and long descriptions.
 * - GenerateProjectDescriptionInput - The input type for the generateProjectDescription function.
 * - GenerateProjectDescriptionOutput - The return type for the generateProjectDescription function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateProjectDescriptionInputSchema = z.object({
  title: z.string().describe('The title of the software project.'),
});
export type GenerateProjectDescriptionInput = z.infer<typeof GenerateProjectDescriptionInputSchema>;

const GenerateProjectDescriptionOutputSchema = z.object({
  shortDescription: z.string().describe('A brief, one-sentence summary of the project.'),
  longDescription: z.string().describe('A detailed description of the project, its features, and the technology used. Should be a few paragraphs long.'),
});
export type GenerateProjectDescriptionOutput = z.infer<typeof GenerateProjectDescriptionOutputSchema>;

export async function generateProjectDescription(input: GenerateProjectDescriptionInput): Promise<GenerateProjectDescriptionOutput> {
    return generateProjectDescriptionFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateProjectDescriptionPrompt',
  input: {schema: GenerateProjectDescriptionInputSchema},
  output: {schema: GenerateProjectDescriptionOutputSchema},
  prompt: `You are an expert technical writer and project manager.

  Given a project title, you will write a compelling short description (a single sentence) and a more detailed long description (2-3 paragraphs) for a project portfolio.
  The descriptions should be engaging and highlight the potential value and features of the project.

  Project Title: {{{title}}}
  `,
});

const generateProjectDescriptionFlow = ai.defineFlow(
  {
    name: 'generateProjectDescriptionFlow',
    inputSchema: GenerateProjectDescriptionInputSchema,
    outputSchema: GenerateProjectDescriptionOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
