// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview This file defines a Genkit flow that suggests relevant tags for blog posts based on their content.
 *
 * - suggestBlogTags - A function that takes blog post content as input and returns a list of suggested tags.
 * - SuggestBlogTagsInput - The input type for the suggestBlogTags function.
 * - SuggestBlogTagsOutput - The return type for the suggestBlogTags function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestBlogTagsInputSchema = z.object({
  content: z.string().describe('The content of the blog post.'),
});
export type SuggestBlogTagsInput = z.infer<typeof SuggestBlogTagsInputSchema>;

const SuggestBlogTagsOutputSchema = z.object({
  tags: z.array(z.string()).describe('An array of suggested tags for the blog post.'),
});
export type SuggestBlogTagsOutput = z.infer<typeof SuggestBlogTagsOutputSchema>;

export async function suggestBlogTags(input: SuggestBlogTagsInput): Promise<SuggestBlogTagsOutput> {
  return suggestBlogTagsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestBlogTagsPrompt',
  input: {schema: SuggestBlogTagsInputSchema},
  output: {schema: SuggestBlogTagsOutputSchema},
  prompt: `You are an expert blog post tag suggestion AI.

  Given the content of a blog post, you will suggest a list of relevant tags that can be used to improve content discoverability.
  The tags should be specific and relevant to the content of the blog post.

  Content: {{{content}}}
  `,config: {
    safetySettings: [
      {
        category: 'HARM_CATEGORY_HATE_SPEECH',
        threshold: 'BLOCK_ONLY_HIGH',
      },
      {
        category: 'HARM_CATEGORY_DANGEROUS_CONTENT',
        threshold: 'BLOCK_NONE',
      },
      {
        category: 'HARM_CATEGORY_HARASSMENT',
        threshold: 'BLOCK_MEDIUM_AND_ABOVE',
      },
      {
        category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT',
        threshold: 'BLOCK_LOW_AND_ABOVE',
      },
    ],
  },
});

const suggestBlogTagsFlow = ai.defineFlow(
  {
    name: 'suggestBlogTagsFlow',
    inputSchema: SuggestBlogTagsInputSchema,
    outputSchema: SuggestBlogTagsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
